/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mfiari.fireemblem.game.factory;

import mfiari.fireemblem.game.behaviour.character.ArcherFemeleBehaviour;
import mfiari.fireemblem.game.behaviour.character.ArcherMaleBehaviour;
import mfiari.fireemblem.game.behaviour.character.BerserkerBehaviour;
import mfiari.fireemblem.game.behaviour.character.CavalierMaleBehaviour;
import mfiari.fireemblem.game.behaviour.character.ClercMistBehaviour;
import mfiari.fireemblem.game.behaviour.character.FighterBehaviour;
import mfiari.fireemblem.game.behaviour.character.GeneralBehaviour;
import mfiari.fireemblem.game.behaviour.character.KnightBehaviour;
import mfiari.fireemblem.game.behaviour.character.LordEliwoodBehaviour;
import mfiari.fireemblem.game.behaviour.character.LordEquusBehaviour;
import mfiari.fireemblem.game.behaviour.character.LordHappiaBehaviour;
import mfiari.fireemblem.game.behaviour.character.LordHectorBehaviour;
import mfiari.fireemblem.game.behaviour.character.LordLynBehaviour;
import mfiari.fireemblem.game.behaviour.character.LordRoyBehaviour;
import mfiari.fireemblem.game.behaviour.character.LordSparthaBehaviour;
import mfiari.fireemblem.game.behaviour.character.MageBehaviour;
import mfiari.fireemblem.game.behaviour.character.MercenaryBehaviour;
import mfiari.fireemblem.game.behaviour.character.MyrmidonBehaviour;
import mfiari.fireemblem.game.behaviour.character.RangerBehaviour;
import mfiari.fireemblem.game.behaviour.character.SageBehaviour;
import mfiari.fireemblem.game.behaviour.character.SoldierBehaviour;
import mfiari.fireemblem.game.behaviour.combat.ArcherFightBehaviour;
import mfiari.fireemblem.game.behaviour.combat.BerserkerFightBehaviour;
import mfiari.fireemblem.game.behaviour.combat.CavalierFightBehaviour;
import mfiari.fireemblem.game.behaviour.combat.ClercFightBehaviour;
import mfiari.fireemblem.game.behaviour.combat.FighterFightBehaviour;
import mfiari.fireemblem.game.behaviour.combat.GeneralFightBehaviour;
import mfiari.fireemblem.game.behaviour.combat.KnightFightBehaviour;
import mfiari.fireemblem.game.behaviour.combat.LordEliwoodFightBehaviour;
import mfiari.fireemblem.game.behaviour.combat.LordEquusFightBehaviour;
import mfiari.fireemblem.game.behaviour.combat.LordHappiaFightBehavior;
import mfiari.fireemblem.game.behaviour.combat.LordHectorFightBehaviour;
import mfiari.fireemblem.game.behaviour.combat.LordLynFightBehaviour;
import mfiari.fireemblem.game.behaviour.combat.LordRoyFightBehaviour;
import mfiari.fireemblem.game.behaviour.combat.LordSparthaFightBehaviour;
import mfiari.fireemblem.game.behaviour.combat.MageFightBehaviour;
import mfiari.fireemblem.game.behaviour.combat.MercenaryFightBehaviour;
import mfiari.fireemblem.game.behaviour.combat.MyrmidonFightBehaviour;
import mfiari.fireemblem.game.behaviour.combat.RangerFightBehaviour;
import mfiari.fireemblem.game.behaviour.combat.SageFightBehaviour;
import mfiari.fireemblem.game.behaviour.combat.SoldierFightBehaviour;
import mfiari.fireemblem.game.behaviour.move.ArcherMovement;
import mfiari.fireemblem.game.behaviour.move.BerserkerMovement;
import mfiari.fireemblem.game.behaviour.move.CavalierMovement;
import mfiari.fireemblem.game.behaviour.move.ClercMovement;
import mfiari.fireemblem.game.behaviour.move.FighterMovement;
import mfiari.fireemblem.game.behaviour.move.GeneralMovement;
import mfiari.fireemblem.game.behaviour.move.KnightMovement;
import mfiari.fireemblem.game.behaviour.move.LordEquusMovement;
import mfiari.fireemblem.game.behaviour.move.LordHappiaMovement;
import mfiari.fireemblem.game.behaviour.move.LordMovement;
import mfiari.fireemblem.game.behaviour.move.LordSparthaMovement;
import mfiari.fireemblem.game.behaviour.move.MageMovement;
import mfiari.fireemblem.game.behaviour.move.MercenaryMovement;
import mfiari.fireemblem.game.behaviour.move.MyrmidonMovement;
import mfiari.fireemblem.game.behaviour.move.RangerMovement;
import mfiari.fireemblem.game.behaviour.move.SageMovement;
import mfiari.fireemblem.game.behaviour.move.SoldierMovement;
import mfiari.fireemblem.game.character.Character;
import mfiari.fireemblem.game.character.CharacterType;
import mfiari.fireemblem.game.organizations.Organization;

/**
 *
 * @author mike
 */
public class CharacterFactory {

    public Character createCharacter(String nom, Organization organisation, CharacterType typePersonnage) {

        switch (typePersonnage) {
            case archer_female:
                Character female_archer = new Character(nom, organisation);
                female_archer.setComportementPersonnage(new ArcherFemeleBehaviour());
                female_archer.setMoveBehaviour(new ArcherMovement());
                female_archer.setFightBehaviour(new ArcherFightBehaviour());
                female_archer.setPourcentagePv(65);
                female_archer.setPourcentagePuissance(37);
                female_archer.setPourcentageMagie(10);
                female_archer.setPourcentageCapacite(50);
                female_archer.setPourcentageVitesse(45);
                female_archer.setPourcentageChance(32);
                female_archer.setPourcentageDefense(30);
                female_archer.setPourcentageResistance(25);
                return female_archer;
            case archer_male:
                Character archer_male = new Character(nom, organisation);
                archer_male.setComportementPersonnage(new ArcherMaleBehaviour());
                archer_male.setMoveBehaviour(new ArcherMovement());
                archer_male.setFightBehaviour(new ArcherFightBehaviour());
                archer_male.setPourcentagePv(65);
                archer_male.setPourcentagePuissance(37);
                archer_male.setPourcentageMagie(10);
                archer_male.setPourcentageCapacite(50);
                archer_male.setPourcentageVitesse(45);
                archer_male.setPourcentageChance(32);
                archer_male.setPourcentageDefense(30);
                archer_male.setPourcentageResistance(25);
                return archer_male;
            case archimage:
                Character athos = new Character(nom, organisation);
                athos.setComportementPersonnage(new KnightBehaviour());
                athos.setMoveBehaviour(new KnightMovement());
                athos.setFightBehaviour(new KnightFightBehaviour());
                athos.setPourcentagePv(70);
                athos.setPourcentagePuissance(40);
                athos.setPourcentageCapacite(60);
                athos.setPourcentageVitesse(60);
                athos.setPourcentageChance(55);
                athos.setPourcentageDefense(20);
                athos.setPourcentageResistance(30);
                return athos;
            case assassin:
                Character assassin = new Character(nom, organisation);
                assassin.setComportementPersonnage(new KnightBehaviour());
                assassin.setMoveBehaviour(new KnightMovement());
                assassin.setFightBehaviour(new KnightFightBehaviour());
                assassin.setPourcentagePv(70);
                assassin.setPourcentagePuissance(40);
                assassin.setPourcentageCapacite(60);
                assassin.setPourcentageVitesse(60);
                assassin.setPourcentageChance(55);
                assassin.setPourcentageDefense(20);
                assassin.setPourcentageResistance(30);
                return assassin;
            case assassin_jaffart:
                Character jaffart = new Character(nom, organisation);
                jaffart.setComportementPersonnage(new KnightBehaviour());
                jaffart.setMoveBehaviour(new KnightMovement());
                jaffart.setFightBehaviour(new KnightFightBehaviour());
                jaffart.setPourcentagePv(70);
                jaffart.setPourcentagePuissance(40);
                jaffart.setPourcentageCapacite(60);
                jaffart.setPourcentageVitesse(60);
                jaffart.setPourcentageChance(55);
                jaffart.setPourcentageDefense(20);
                jaffart.setPourcentageResistance(30);
                return jaffart;
            case berserker:
                Character berserker = new Character(nom, organisation);
                berserker.setComportementPersonnage(new KnightBehaviour());
                berserker.setMoveBehaviour(new KnightMovement());
                berserker.setFightBehaviour(new KnightFightBehaviour());
                berserker.setPourcentagePv(70);
                berserker.setPourcentagePuissance(40);
                berserker.setPourcentageCapacite(60);
                berserker.setPourcentageVitesse(60);
                berserker.setPourcentageChance(55);
                berserker.setPourcentageDefense(20);
                berserker.setPourcentageResistance(30);
                return berserker;
            case berserker_hawkeye:
                Character hawkeye = new Character(nom, organisation);
                hawkeye.setComportementPersonnage(new BerserkerBehaviour());
                hawkeye.setMoveBehaviour(new BerserkerMovement());
                hawkeye.setFightBehaviour(new BerserkerFightBehaviour());
                hawkeye.setPourcentagePv(50);
                hawkeye.setPourcentagePuissance(40);
                hawkeye.setPourcentageMagie(10);
                hawkeye.setPourcentageCapacite(30);
                hawkeye.setPourcentageVitesse(25);
                hawkeye.setPourcentageChance(40);
                hawkeye.setPourcentageDefense(20);
                hawkeye.setPourcentageResistance(35);
                hawkeye.setNiv(4);
                hawkeye.setPvGagne(24);
                hawkeye.setPuissanceGagne(11);
                hawkeye.setMagieGagne(5);
                hawkeye.setCapaciteGagne(8);
                hawkeye.setVitesseGagne(4);
                hawkeye.setChanceGagne(13);
                hawkeye.setDefGagne(8);
                hawkeye.setResistanceGagne(10);
                hawkeye.setConstitutionGagne(3);
                hawkeye.soin();
                return hawkeye;
            case bretteur:
                Character bretteur = new Character(nom, organisation);
                bretteur.setComportementPersonnage(new KnightBehaviour());
                bretteur.setMoveBehaviour(new KnightMovement());
                bretteur.setFightBehaviour(new KnightFightBehaviour());
                bretteur.setPourcentagePv(70);
                bretteur.setPourcentagePuissance(40);
                bretteur.setPourcentageCapacite(60);
                bretteur.setPourcentageVitesse(60);
                bretteur.setPourcentageChance(55);
                bretteur.setPourcentageDefense(20);
                bretteur.setPourcentageResistance(30);
                return bretteur;
            case cavalier:
                Character cavalier = new Character(nom, organisation);
                cavalier.setComportementPersonnage(new CavalierMaleBehaviour());
                cavalier.setMoveBehaviour(new CavalierMovement());
                cavalier.setFightBehaviour(new CavalierFightBehaviour());
                cavalier.setPourcentagePv(73);
                cavalier.setPourcentagePuissance(40);
                cavalier.setPourcentageMagie(15);
                cavalier.setPourcentageCapacite(40);
                cavalier.setPourcentageVitesse(35);
                cavalier.setPourcentageChance(30);
                cavalier.setPourcentageDefense(30);
                cavalier.setPourcentageResistance(20);
                return cavalier;
            case cavalier_nomade:
                Character cavalier_nomade = new Character(nom, organisation);
                cavalier_nomade.setComportementPersonnage(new KnightBehaviour());
                cavalier_nomade.setMoveBehaviour(new KnightMovement());
                cavalier_nomade.setFightBehaviour(new KnightFightBehaviour());
                cavalier_nomade.setPourcentagePv(70);
                cavalier_nomade.setPourcentagePuissance(40);
                cavalier_nomade.setPourcentageCapacite(60);
                cavalier_nomade.setPourcentageVitesse(60);
                cavalier_nomade.setPourcentageChance(55);
                cavalier_nomade.setPourcentageDefense(20);
                cavalier_nomade.setPourcentageResistance(30);
                return cavalier_nomade;
            case cavalier_wyvern:
                Character cavalier_wyvern = new Character(nom, organisation);
                cavalier_wyvern.setComportementPersonnage(new KnightBehaviour());
                cavalier_wyvern.setMoveBehaviour(new KnightMovement());
                cavalier_wyvern.setFightBehaviour(new KnightFightBehaviour());
                cavalier_wyvern.setPourcentagePv(70);
                cavalier_wyvern.setPourcentagePuissance(40);
                cavalier_wyvern.setPourcentageCapacite(60);
                cavalier_wyvern.setPourcentageVitesse(60);
                cavalier_wyvern.setPourcentageChance(55);
                cavalier_wyvern.setPourcentageDefense(20);
                cavalier_wyvern.setPourcentageResistance(30);
                return cavalier_wyvern;
            case chevalier:
                Character chevalier = new Character(nom, organisation);
                chevalier.setComportementPersonnage(new KnightBehaviour());
                chevalier.setMoveBehaviour(new KnightMovement());
                chevalier.setFightBehaviour(new KnightFightBehaviour());
                chevalier.setPourcentagePv(70);
                chevalier.setPourcentagePuissance(40);
                chevalier.setPourcentageCapacite(60);
                chevalier.setPourcentageVitesse(60);
                chevalier.setPourcentageChance(55);
                chevalier.setPourcentageDefense(20);
                chevalier.setPourcentageResistance(30);
                return chevalier;
            case chevalier_pegase:
                Character chevalier_pegase = new Character(nom, organisation);
                chevalier_pegase.setComportementPersonnage(new KnightBehaviour());
                chevalier_pegase.setMoveBehaviour(new KnightMovement());
                chevalier_pegase.setFightBehaviour(new KnightFightBehaviour());
                chevalier_pegase.setPourcentagePv(70);
                chevalier_pegase.setPourcentagePuissance(40);
                chevalier_pegase.setPourcentageCapacite(60);
                chevalier_pegase.setPourcentageVitesse(60);
                chevalier_pegase.setPourcentageChance(55);
                chevalier_pegase.setPourcentageDefense(20);
                chevalier_pegase.setPourcentageResistance(30);
                return chevalier_pegase;
            case chevalier_wyvern:
                Character chevalier_wyvern = new Character(nom, organisation);
                chevalier_wyvern.setComportementPersonnage(new KnightBehaviour());
                chevalier_wyvern.setMoveBehaviour(new KnightMovement());
                chevalier_wyvern.setFightBehaviour(new KnightFightBehaviour());
                chevalier_wyvern.setPourcentagePv(70);
                chevalier_wyvern.setPourcentagePuissance(40);
                chevalier_wyvern.setPourcentageCapacite(60);
                chevalier_wyvern.setPourcentageVitesse(60);
                chevalier_wyvern.setPourcentageChance(55);
                chevalier_wyvern.setPourcentageDefense(20);
                chevalier_wyvern.setPourcentageResistance(30);
                return chevalier_wyvern;
            case clerc:
                Character clerc = new Character(nom, organisation);
                clerc.setComportementPersonnage(new ClercMistBehaviour());
                clerc.getComportementPersonnage().setPromotedClass(CharacterType.valkyrie_mist);
                clerc.setMoveBehaviour(new ClercMovement());
                clerc.setFightBehaviour(new ClercFightBehaviour());
                clerc.setPourcentagePv(80);
                clerc.setPourcentagePuissance(45);
                clerc.setPourcentageCapacite(50);
                clerc.setPourcentageVitesse(40);
                clerc.setPourcentageChance(45);
                clerc.setPourcentageDefense(30);
                clerc.setPourcentageResistance(35);
                return clerc;
            case clerc_mist:
                Character mist = new Character(nom, organisation);
                mist.setComportementPersonnage(new ClercMistBehaviour());
                mist.setMoveBehaviour(new ClercMovement());
                mist.setFightBehaviour(new ClercFightBehaviour());
                mist.getComportementPersonnage().setPromotedClass(CharacterType.valkyrie_mist);
                mist.setPourcentagePv(50);
                mist.setPourcentagePuissance(35);
                mist.setPourcentageMagie(50);
                mist.setPourcentageCapacite(25);
                mist.setPourcentageVitesse(40);
                mist.setPourcentageChance(60);
                mist.setPourcentageDefense(15);
                mist.setPourcentageResistance(40);
                return mist;
            case combattant:
                Character combattant = new Character(nom, organisation);
                combattant.setComportementPersonnage(new FighterBehaviour());
                combattant.setMoveBehaviour(new FighterMovement());
                combattant.setFightBehaviour(new FighterFightBehaviour());
                combattant.setPourcentagePv(70);
                combattant.setPourcentagePuissance(40);
                combattant.setPourcentageCapacite(60);
                combattant.setPourcentageVitesse(60);
                combattant.setPourcentageChance(55);
                combattant.setPourcentageDefense(20);
                combattant.setPourcentageResistance(30);
                return combattant;
            case corbeau:
                Character corbeau = new Character(nom, organisation);
                corbeau.setComportementPersonnage(new FighterBehaviour());
                corbeau.setMoveBehaviour(new FighterMovement());
                corbeau.setFightBehaviour(new FighterFightBehaviour());
                corbeau.setPourcentagePv(70);
                corbeau.setPourcentagePuissance(40);
                corbeau.setPourcentageCapacite(60);
                corbeau.setPourcentageVitesse(60);
                corbeau.setPourcentageChance(55);
                corbeau.setPourcentageDefense(20);
                corbeau.setPourcentageResistance(30);
                return corbeau;
            case corbeau_naesala:
                Character corbeau_naesala = new Character(nom, organisation);
                corbeau_naesala.setComportementPersonnage(new FighterBehaviour());
                corbeau_naesala.setMoveBehaviour(new FighterMovement());
                corbeau_naesala.setFightBehaviour(new FighterFightBehaviour());
                corbeau_naesala.setPourcentagePv(70);
                corbeau_naesala.setPourcentagePuissance(40);
                corbeau_naesala.setPourcentageCapacite(60);
                corbeau_naesala.setPourcentageVitesse(60);
                corbeau_naesala.setPourcentageChance(55);
                corbeau_naesala.setPourcentageDefense(20);
                corbeau_naesala.setPourcentageResistance(30);
                return corbeau_naesala;
            case dark_druide:
                Character nergal = new Character(nom, organisation);
                nergal.setComportementPersonnage(new GeneralBehaviour());
                nergal.setMoveBehaviour(new GeneralMovement());
                nergal.setFightBehaviour(new GeneralFightBehaviour());
                nergal.setPourcentagePv(70);
                nergal.setPourcentagePuissance(40);
                nergal.setPourcentageCapacite(60);
                nergal.setPourcentageVitesse(60);
                nergal.setPourcentageChance(55);
                nergal.setPourcentageDefense(20);
                nergal.setPourcentageResistance(30);
                return nergal;
            case dragon_blanc:
                Character nasir = new Character(nom, organisation);
                nasir.setComportementPersonnage(new GeneralBehaviour());
                nasir.setMoveBehaviour(new GeneralMovement());
                nasir.setFightBehaviour(new GeneralFightBehaviour());
                nasir.setPourcentagePv(70);
                nasir.setPourcentagePuissance(40);
                nasir.setPourcentageCapacite(60);
                nasir.setPourcentageVitesse(60);
                nasir.setPourcentageChance(55);
                nasir.setPourcentageDefense(20);
                nasir.setPourcentageResistance(30);
                return nasir;
            case dragon_feu:
                Character dragon_feu = new Character(nom, organisation);
                dragon_feu.setComportementPersonnage(new GeneralBehaviour());
                dragon_feu.setMoveBehaviour(new GeneralMovement());
                dragon_feu.setFightBehaviour(new GeneralFightBehaviour());
                dragon_feu.setPourcentagePv(70);
                dragon_feu.setPourcentagePuissance(40);
                dragon_feu.setPourcentageCapacite(60);
                dragon_feu.setPourcentageVitesse(60);
                dragon_feu.setPourcentageChance(55);
                dragon_feu.setPourcentageDefense(20);
                dragon_feu.setPourcentageResistance(30);
                return dragon_feu;
            case druid:
                Character druid = new Character(nom, organisation);
                druid.setComportementPersonnage(new GeneralBehaviour());
                druid.setMoveBehaviour(new GeneralMovement());
                druid.setFightBehaviour(new GeneralFightBehaviour());
                druid.setPourcentagePv(70);
                druid.setPourcentagePuissance(40);
                druid.setPourcentageCapacite(60);
                druid.setPourcentageVitesse(60);
                druid.setPourcentageChance(55);
                druid.setPourcentageDefense(20);
                druid.setPourcentageResistance(30);
                return druid;
            case faucon:
                Character faucon = new Character(nom, organisation);
                faucon.setComportementPersonnage(new GeneralBehaviour());
                faucon.setMoveBehaviour(new GeneralMovement());
                faucon.setFightBehaviour(new GeneralFightBehaviour());
                faucon.setPourcentagePv(70);
                faucon.setPourcentagePuissance(40);
                faucon.setPourcentageCapacite(60);
                faucon.setPourcentageVitesse(60);
                faucon.setPourcentageChance(55);
                faucon.setPourcentageDefense(20);
                faucon.setPourcentageResistance(30);
                return faucon;
            case faucon_tibarn:
                Character faucon_tibarn = new Character(nom, organisation);
                faucon_tibarn.setComportementPersonnage(new GeneralBehaviour());
                faucon_tibarn.setMoveBehaviour(new GeneralMovement());
                faucon_tibarn.setFightBehaviour(new GeneralFightBehaviour());
                faucon_tibarn.setPourcentagePv(70);
                faucon_tibarn.setPourcentagePuissance(40);
                faucon_tibarn.setPourcentageCapacite(60);
                faucon_tibarn.setPourcentageVitesse(60);
                faucon_tibarn.setPourcentageChance(55);
                faucon_tibarn.setPourcentageDefense(20);
                faucon_tibarn.setPourcentageResistance(30);
                return faucon_tibarn;
            case general:
                Character general = new Character(nom, organisation);
                general.setComportementPersonnage(new GeneralBehaviour());
                general.setMoveBehaviour(new GeneralMovement());
                general.setFightBehaviour(new GeneralFightBehaviour());
                general.setPourcentagePv(70);
                general.setPourcentagePuissance(40);
                general.setPourcentageCapacite(60);
                general.setPourcentageVitesse(60);
                general.setPourcentageChance(55);
                general.setPourcentageDefense(20);
                general.setPourcentageResistance(30);
                return general;
            case general_bryce:
                Character bryce = new Character(nom, organisation);
                bryce.setComportementPersonnage(new GeneralBehaviour());
                bryce.setMoveBehaviour(new GeneralMovement());
                bryce.setFightBehaviour(new GeneralFightBehaviour());
                bryce.setPourcentagePv(70);
                bryce.setPourcentagePuissance(40);
                bryce.setPourcentageCapacite(60);
                bryce.setPourcentageVitesse(60);
                bryce.setPourcentageChance(55);
                bryce.setPourcentageDefense(20);
                bryce.setPourcentageResistance(30);
                return bryce;
            case general_chevalier_noir:
                Character chevalier_noir = new Character(nom, organisation);
                chevalier_noir.setComportementPersonnage(new GeneralBehaviour());
                chevalier_noir.setMoveBehaviour(new GeneralMovement());
                chevalier_noir.setFightBehaviour(new GeneralFightBehaviour());
                chevalier_noir.setPourcentagePv(70);
                chevalier_noir.setPourcentagePuissance(40);
                chevalier_noir.setPourcentageCapacite(60);
                chevalier_noir.setPourcentageVitesse(60);
                chevalier_noir.setPourcentageChance(55);
                chevalier_noir.setPourcentageDefense(20);
                chevalier_noir.setPourcentageResistance(30);
                return chevalier_noir;
            case general_murdock:
                Character murdock = new Character(nom, organisation);
                murdock.setComportementPersonnage(new GeneralBehaviour());
                murdock.setMoveBehaviour(new GeneralMovement());
                murdock.setFightBehaviour(new GeneralFightBehaviour());
                murdock.setPourcentagePv(70);
                murdock.setPourcentagePuissance(40);
                murdock.setPourcentageCapacite(60);
                murdock.setPourcentageVitesse(60);
                murdock.setPourcentageChance(55);
                murdock.setPourcentageDefense(20);
                murdock.setPourcentageResistance(30);
                return murdock;
            case general_uther:
                Character uther = new Character(nom, organisation);
                uther.setComportementPersonnage(new GeneralBehaviour());
                uther.setMoveBehaviour(new GeneralMovement());
                uther.setFightBehaviour(new GeneralFightBehaviour());
                uther.setPourcentagePv(70);
                uther.setPourcentagePuissance(40);
                uther.setPourcentageCapacite(60);
                uther.setPourcentageVitesse(60);
                uther.setPourcentageChance(55);
                uther.setPourcentageDefense(20);
                uther.setPourcentageResistance(30);
                return uther;
            case general_zelgius:
                Character zelgius = new Character(nom, organisation);
                zelgius.setComportementPersonnage(new GeneralBehaviour());
                zelgius.setMoveBehaviour(new GeneralMovement());
                zelgius.setFightBehaviour(new GeneralFightBehaviour());
                zelgius.setPourcentagePv(70);
                zelgius.setPourcentagePuissance(40);
                zelgius.setPourcentageCapacite(60);
                zelgius.setPourcentageVitesse(60);
                zelgius.setPourcentageChance(55);
                zelgius.setPourcentageDefense(20);
                zelgius.setPourcentageResistance(30);
                return zelgius;
            case guerrier:
                Character guerrier = new Character(nom, organisation);
                guerrier.setComportementPersonnage(new LordEliwoodBehaviour());
                guerrier.getComportementPersonnage().setPromotedClass(CharacterType.lord_equus);
                guerrier.setMoveBehaviour(new LordMovement());
                guerrier.setFightBehaviour(new LordEliwoodFightBehaviour());
                guerrier.setPourcentagePv(80);
                guerrier.setPourcentagePuissance(45);
                guerrier.setPourcentageCapacite(50);
                guerrier.setPourcentageVitesse(40);
                guerrier.setPourcentageChance(45);
                guerrier.setPourcentageDefense(30);
                guerrier.setPourcentageResistance(35);
                return guerrier;
            case heros:
                Character heros = new Character(nom, organisation);
                heros.setComportementPersonnage(new LordEliwoodBehaviour());
                heros.getComportementPersonnage().setPromotedClass(CharacterType.lord_equus);
                heros.setMoveBehaviour(new LordMovement());
                heros.setFightBehaviour(new LordEliwoodFightBehaviour());
                heros.setPourcentagePv(80);
                heros.setPourcentagePuissance(45);
                heros.setPourcentageCapacite(50);
                heros.setPourcentageVitesse(40);
                heros.setPourcentageChance(45);
                heros.setPourcentageDefense(30);
                heros.setPourcentageResistance(35);
                return heros;
            case heros_greil:
                Character greil = new Character(nom, organisation);
                greil.setComportementPersonnage(new LordEliwoodBehaviour());
                greil.getComportementPersonnage().setPromotedClass(CharacterType.lord_equus);
                greil.setMoveBehaviour(new LordMovement());
                greil.setFightBehaviour(new LordEliwoodFightBehaviour());
                greil.setPourcentagePv(80);
                greil.setPourcentagePuissance(45);
                greil.setPourcentageCapacite(50);
                greil.setPourcentageVitesse(40);
                greil.setPourcentageChance(45);
                greil.setPourcentageDefense(30);
                greil.setPourcentageResistance(35);
                return greil;
            case king_daein:
                Character ashnard = new Character(nom, organisation);
                ashnard.setComportementPersonnage(new LordEliwoodBehaviour());
                ashnard.getComportementPersonnage().setPromotedClass(CharacterType.lord_equus);
                ashnard.setMoveBehaviour(new LordMovement());
                ashnard.setFightBehaviour(new LordEliwoodFightBehaviour());
                ashnard.setPourcentagePv(80);
                ashnard.setPourcentagePuissance(45);
                ashnard.setPourcentageCapacite(50);
                ashnard.setPourcentageVitesse(40);
                ashnard.setPourcentageChance(45);
                ashnard.setPourcentageDefense(30);
                ashnard.setPourcentageResistance(35);
                return ashnard;
            case king_zephiel:
                Character zephiel = new Character(nom, organisation);
                zephiel.setComportementPersonnage(new LordEliwoodBehaviour());
                zephiel.getComportementPersonnage().setPromotedClass(CharacterType.lord_equus);
                zephiel.setMoveBehaviour(new LordMovement());
                zephiel.setFightBehaviour(new LordEliwoodFightBehaviour());
                zephiel.setPourcentagePv(80);
                zephiel.setPourcentagePuissance(45);
                zephiel.setPourcentageCapacite(50);
                zephiel.setPourcentageVitesse(40);
                zephiel.setPourcentageChance(45);
                zephiel.setPourcentageDefense(30);
                zephiel.setPourcentageResistance(35);
                return zephiel;
            case lion_caineghis:
                Character caineghis = new Character(nom, organisation);
                caineghis.setComportementPersonnage(new LordEliwoodBehaviour());
                caineghis.getComportementPersonnage().setPromotedClass(CharacterType.lord_equus);
                caineghis.setMoveBehaviour(new LordMovement());
                caineghis.setFightBehaviour(new LordEliwoodFightBehaviour());
                caineghis.setPourcentagePv(80);
                caineghis.setPourcentagePuissance(45);
                caineghis.setPourcentageCapacite(50);
                caineghis.setPourcentageVitesse(40);
                caineghis.setPourcentageChance(45);
                caineghis.setPourcentageDefense(30);
                caineghis.setPourcentageResistance(35);
                return caineghis;
            case lion_giffca:
                Character giffca = new Character(nom, organisation);
                giffca.setComportementPersonnage(new LordEliwoodBehaviour());
                giffca.getComportementPersonnage().setPromotedClass(CharacterType.lord_equus);
                giffca.setMoveBehaviour(new LordMovement());
                giffca.setFightBehaviour(new LordEliwoodFightBehaviour());
                giffca.setPourcentagePv(80);
                giffca.setPourcentagePuissance(45);
                giffca.setPourcentageCapacite(50);
                giffca.setPourcentageVitesse(40);
                giffca.setPourcentageChance(45);
                giffca.setPourcentageDefense(30);
                giffca.setPourcentageResistance(35);
                return giffca;
            case lord_elbert:
                Character elbert = new Character(nom, organisation);
                elbert.setComportementPersonnage(new LordEliwoodBehaviour());
                elbert.getComportementPersonnage().setPromotedClass(CharacterType.lord_equus);
                elbert.setMoveBehaviour(new LordMovement());
                elbert.setFightBehaviour(new LordEliwoodFightBehaviour());
                elbert.setPourcentagePv(80);
                elbert.setPourcentagePuissance(45);
                elbert.setPourcentageCapacite(50);
                elbert.setPourcentageVitesse(40);
                elbert.setPourcentageChance(45);
                elbert.setPourcentageDefense(30);
                elbert.setPourcentageResistance(35);
                return elbert;
            case lord_eliwood:
                Character eliwood = new Character(nom, organisation);
                eliwood.setComportementPersonnage(new LordEliwoodBehaviour());
                eliwood.getComportementPersonnage().setPromotedClass(CharacterType.lord_equus);
                eliwood.setMoveBehaviour(new LordMovement());
                eliwood.setFightBehaviour(new LordEliwoodFightBehaviour());
                eliwood.setPourcentagePv(80);
                eliwood.setPourcentagePuissance(45);
                eliwood.setPourcentageCapacite(50);
                eliwood.setPourcentageVitesse(40);
                eliwood.setPourcentageChance(45);
                eliwood.setPourcentageDefense(30);
                eliwood.setPourcentageResistance(35);
                return eliwood;
            case lord_equus:
                Character lord_equus = new Character(nom, organisation);
                lord_equus.setComportementPersonnage(new LordEquusBehaviour());
                lord_equus.setMoveBehaviour(new LordEquusMovement());
                lord_equus.setFightBehaviour(new LordEquusFightBehaviour());
                lord_equus.setPourcentagePv(80);
                lord_equus.setPourcentagePuissance(45);
                lord_equus.setPourcentageCapacite(50);
                lord_equus.setPourcentageVitesse(40);
                lord_equus.setPourcentageChance(45);
                lord_equus.setPourcentageDefense(30);
                lord_equus.setPourcentageResistance(35);
                return lord_equus;
            case lord_happia:
                Character lord_happia = new Character(nom, organisation);
                lord_happia.setComportementPersonnage(new LordHappiaBehaviour());
                lord_happia.setMoveBehaviour(new LordHappiaMovement());
                lord_happia.setFightBehaviour(new LordHappiaFightBehavior());
                lord_happia.setPourcentagePv(90);
                lord_happia.setPourcentagePuissance(60);
                lord_happia.setPourcentageCapacite(45);
                lord_happia.setPourcentageVitesse(35);
                lord_happia.setPourcentageChance(30);
                lord_happia.setPourcentageDefense(50);
                lord_happia.setPourcentageResistance(25);
                return lord_happia;
            case lord_hector:
                Character hector = new Character(nom, organisation);
                hector.setComportementPersonnage(new LordHectorBehaviour());
                hector.getComportementPersonnage().setPromotedClass(CharacterType.lord_happia);
                hector.setMoveBehaviour(new LordMovement());
                hector.setFightBehaviour(new LordHectorFightBehaviour());
                hector.setPourcentagePv(90);
                hector.setPourcentagePuissance(60);
                hector.setPourcentageCapacite(45);
                hector.setPourcentageVitesse(35);
                hector.setPourcentageChance(30);
                hector.setPourcentageDefense(50);
                hector.setPourcentageResistance(25);
                return hector;
            case lord_lyn:
                Character lyn = new Character(nom, organisation);
                lyn.setComportementPersonnage(new LordLynBehaviour());
                lyn.getComportementPersonnage().setPromotedClass(CharacterType.lord_spatha);
                lyn.setMoveBehaviour(new LordMovement());
                lyn.setFightBehaviour(new LordLynFightBehaviour());
                lyn.setPourcentagePv(70);
                lyn.setPourcentagePuissance(40);
                lyn.setPourcentageCapacite(60);
                lyn.setPourcentageVitesse(60);
                lyn.setPourcentageChance(55);
                lyn.setPourcentageDefense(20);
                lyn.setPourcentageResistance(30);
                return lyn;
            case lord_roy:
                Character roy = new Character(nom, organisation);
                roy.setComportementPersonnage(new LordRoyBehaviour());
                roy.getComportementPersonnage().setPromotedClass(CharacterType.master_lord);
                roy.setMoveBehaviour(new LordMovement());
                roy.setFightBehaviour(new LordRoyFightBehaviour());
                roy.setPourcentagePv(70);
                roy.setPourcentagePuissance(40);
                roy.setPourcentageCapacite(60);
                roy.setPourcentageVitesse(60);
                roy.setPourcentageChance(55);
                roy.setPourcentageDefense(20);
                roy.setPourcentageResistance(30);
                return roy;
            case lord_spatha:
                Character lord_spartha = new Character(nom, organisation);
                lord_spartha.setComportementPersonnage(new LordSparthaBehaviour());
                lord_spartha.setMoveBehaviour(new LordSparthaMovement());
                lord_spartha.setFightBehaviour(new LordSparthaFightBehaviour());
                lord_spartha.setPourcentagePv(70);
                lord_spartha.setPourcentagePuissance(40);
                lord_spartha.setPourcentageCapacite(60);
                lord_spartha.setPourcentageVitesse(60);
                lord_spartha.setPourcentageChance(55);
                lord_spartha.setPourcentageDefense(20);
                lord_spartha.setPourcentageResistance(30);
                return lord_spartha;
            case lord_wyvern:
                Character lord_wyvern = new Character(nom, organisation);
                lord_wyvern.setComportementPersonnage(new LordSparthaBehaviour());
                lord_wyvern.setMoveBehaviour(new LordSparthaMovement());
                lord_wyvern.setFightBehaviour(new LordSparthaFightBehaviour());
                lord_wyvern.setPourcentagePv(70);
                lord_wyvern.setPourcentagePuissance(40);
                lord_wyvern.setPourcentageCapacite(60);
                lord_wyvern.setPourcentageVitesse(60);
                lord_wyvern.setPourcentageChance(55);
                lord_wyvern.setPourcentageDefense(20);
                lord_wyvern.setPourcentageResistance(30);
                return lord_wyvern;
            case mage:
                Character mage = new Character(nom, organisation);
                mage.setComportementPersonnage(new MageBehaviour());
                mage.setMoveBehaviour(new MageMovement());
                mage.setFightBehaviour(new MageFightBehaviour());
                mage.setPourcentagePv(57);
                mage.setPourcentagePuissance(20);
                mage.setPourcentageMagie(60);
                mage.setPourcentageCapacite(45);
                mage.setPourcentageVitesse(40);
                mage.setPourcentageChance(20);
                mage.setPourcentageDefense(15);
                mage.setPourcentageResistance(45);
                return mage;
            case mage_lilina:
                Character lilina = new Character(nom, organisation);
                lilina.setComportementPersonnage(new MageBehaviour());
                lilina.setMoveBehaviour(new MageMovement());
                lilina.setFightBehaviour(new MageFightBehaviour());
                lilina.setPourcentagePv(45);
                lilina.setPourcentagePuissance(20);
                lilina.setPourcentageMagie(75);
                lilina.setPourcentageCapacite(20);
                lilina.setPourcentageVitesse(35);
                lilina.setPourcentageChance(50);
                lilina.setPourcentageDefense(10);
                lilina.setPourcentageResistance(35);
                return lilina;
            case mage_nino:
                Character nino = new Character(nom, organisation);
                nino.setComportementPersonnage(new MageBehaviour());
                nino.setMoveBehaviour(new MageMovement());
                nino.setFightBehaviour(new MageFightBehaviour());
                nino.setPourcentagePv(55);
                nino.setPourcentagePuissance(20);
                nino.setPourcentageMagie(50);
                nino.setPourcentageCapacite(55);
                nino.setPourcentageVitesse(60);
                nino.setPourcentageChance(45);
                nino.setPourcentageDefense(15);
                nino.setPourcentageResistance(50);
                nino.setNiv(5);
                nino.setPvGagne(3);
                nino.setPuissanceGagne(1);
                nino.setMagieGagne(1);
                nino.setCapaciteGagne(6);
                nino.setVitesseGagne(8);
                nino.setChanceGagne(10);
                nino.setDefGagne(1);
                nino.setResistanceGagne(4);
                nino.setConstitutionGagne(-3);
                nino.soin();
                return nino;
            case mage_soren:
                Character soren = new Character(nom, organisation);
                soren.setComportementPersonnage(new MageBehaviour());
                soren.setMoveBehaviour(new MageMovement());
                soren.setFightBehaviour(new MageFightBehaviour());
                soren.setPourcentagePv(45);
                soren.setPourcentagePuissance(5);
                soren.setPourcentageMagie(60);
                soren.setPourcentageCapacite(55);
                soren.setPourcentageVitesse(40);
                soren.setPourcentageChance(30);
                soren.setPourcentageDefense(15);
                soren.setPourcentageResistance(55);
                return soren;
            case manakete:
                Character manakete = new Character(nom, organisation);
                manakete.setComportementPersonnage(new LordSparthaBehaviour());
                manakete.setMoveBehaviour(new LordSparthaMovement());
                manakete.setFightBehaviour(new LordSparthaFightBehaviour());
                manakete.setPourcentagePv(70);
                manakete.setPourcentagePuissance(40);
                manakete.setPourcentageCapacite(60);
                manakete.setPourcentageVitesse(60);
                manakete.setPourcentageChance(55);
                manakete.setPourcentageDefense(20);
                manakete.setPourcentageResistance(30);
                return manakete;
            case manakete_fa:
                Character fa = new Character(nom, organisation);
                fa.setComportementPersonnage(new LordSparthaBehaviour());
                fa.setMoveBehaviour(new LordSparthaMovement());
                fa.setFightBehaviour(new LordSparthaFightBehaviour());
                fa.setPourcentagePv(70);
                fa.setPourcentagePuissance(40);
                fa.setPourcentageCapacite(60);
                fa.setPourcentageVitesse(60);
                fa.setPourcentageChance(55);
                fa.setPourcentageDefense(20);
                fa.setPourcentageResistance(30);
                return fa;
            case marchand:
                Character merlinus = new Character(nom, organisation);
                merlinus.setComportementPersonnage(new LordSparthaBehaviour());
                merlinus.setMoveBehaviour(new LordSparthaMovement());
                merlinus.setFightBehaviour(new LordSparthaFightBehaviour());
                merlinus.setPourcentagePv(70);
                merlinus.setPourcentagePuissance(40);
                merlinus.setPourcentageCapacite(60);
                merlinus.setPourcentageVitesse(60);
                merlinus.setPourcentageChance(55);
                merlinus.setPourcentageDefense(20);
                merlinus.setPourcentageResistance(30);
                return merlinus;
            case master_lord:
                Character master_lord = new Character(nom, organisation);
                master_lord.setComportementPersonnage(new LordSparthaBehaviour());
                master_lord.setMoveBehaviour(new LordSparthaMovement());
                master_lord.setFightBehaviour(new LordSparthaFightBehaviour());
                master_lord.setPourcentagePv(70);
                master_lord.setPourcentagePuissance(40);
                master_lord.setPourcentageCapacite(60);
                master_lord.setPourcentageVitesse(60);
                master_lord.setPourcentageChance(55);
                master_lord.setPourcentageDefense(20);
                master_lord.setPourcentageResistance(30);
                return master_lord;
            case mercenaire:
                Character mercenaire = new Character(nom, organisation);
                mercenaire.setComportementPersonnage(new MercenaryBehaviour());
                mercenaire.setMoveBehaviour(new MercenaryMovement());
                mercenaire.setFightBehaviour(new MercenaryFightBehaviour());
                mercenaire.setPourcentagePv(80);
                mercenaire.setPourcentagePuissance(40);
                mercenaire.setPourcentageMagie(20);
                mercenaire.setPourcentageCapacite(40);
                mercenaire.setPourcentageVitesse(32);
                mercenaire.setPourcentageChance(30);
                mercenaire.setPourcentageDefense(18);
                mercenaire.setPourcentageResistance(17);
                return mercenaire;
            case myrmidon:
                Character myrmidon = new Character(nom, organisation);
                myrmidon.setComportementPersonnage(new MyrmidonBehaviour());
                myrmidon.setMoveBehaviour(new MyrmidonMovement());
                myrmidon.setFightBehaviour(new MyrmidonFightBehaviour());
                myrmidon.setPourcentagePv(67);
                myrmidon.setPourcentagePuissance(40);
                myrmidon.setPourcentageMagie(10);
                myrmidon.setPourcentageCapacite(50);
                myrmidon.setPourcentageVitesse(50);
                myrmidon.setPourcentageChance(30);
                myrmidon.setPourcentageDefense(20);
                myrmidon.setPourcentageResistance(20);
                return myrmidon;
            case paladin:
                Character paladin = new Character(nom, organisation);
                paladin.setComportementPersonnage(new LordSparthaBehaviour());
                paladin.setMoveBehaviour(new LordSparthaMovement());
                paladin.setFightBehaviour(new LordSparthaFightBehaviour());
                paladin.setPourcentagePv(70);
                paladin.setPourcentagePuissance(40);
                paladin.setPourcentageCapacite(60);
                paladin.setPourcentageVitesse(60);
                paladin.setPourcentageChance(55);
                paladin.setPourcentageDefense(20);
                paladin.setPourcentageResistance(30);
                return paladin;
            case paladin_bertram:
                Character bertram = new Character(nom, organisation);
                bertram.setComportementPersonnage(new LordSparthaBehaviour());
                bertram.setMoveBehaviour(new LordSparthaMovement());
                bertram.setFightBehaviour(new LordSparthaFightBehaviour());
                bertram.setPourcentagePv(70);
                bertram.setPourcentagePuissance(40);
                bertram.setPourcentageCapacite(60);
                bertram.setPourcentageVitesse(60);
                bertram.setPourcentageChance(55);
                bertram.setPourcentageDefense(20);
                bertram.setPourcentageResistance(30);
                return bertram;
            case paladin_petrine:
                Character petrine = new Character(nom, organisation);
                petrine.setComportementPersonnage(new LordSparthaBehaviour());
                petrine.setMoveBehaviour(new LordSparthaMovement());
                petrine.setFightBehaviour(new LordSparthaFightBehaviour());
                petrine.setPourcentagePv(70);
                petrine.setPourcentagePuissance(40);
                petrine.setPourcentageCapacite(60);
                petrine.setPourcentageVitesse(60);
                petrine.setPourcentageChance(55);
                petrine.setPourcentageDefense(20);
                petrine.setPourcentageResistance(30);
                return petrine;
            case paladin_titania:
                Character titania = new Character(nom, organisation);
                titania.setComportementPersonnage(new LordSparthaBehaviour());
                titania.setMoveBehaviour(new LordSparthaMovement());
                titania.setFightBehaviour(new LordSparthaFightBehaviour());
                titania.setPourcentagePv(70);
                titania.setPourcentagePuissance(40);
                titania.setPourcentageCapacite(60);
                titania.setPourcentageVitesse(60);
                titania.setPourcentageChance(55);
                titania.setPourcentageDefense(20);
                titania.setPourcentageResistance(30);
                return titania;
            case pirate:
                Character pirate = new Character(nom, organisation);
                pirate.setComportementPersonnage(new LordSparthaBehaviour());
                pirate.setMoveBehaviour(new LordSparthaMovement());
                pirate.setFightBehaviour(new LordSparthaFightBehaviour());
                pirate.setPourcentagePv(70);
                pirate.setPourcentagePuissance(40);
                pirate.setPourcentageCapacite(60);
                pirate.setPourcentageVitesse(60);
                pirate.setPourcentageChance(55);
                pirate.setPourcentageDefense(20);
                pirate.setPourcentageResistance(30);
                return pirate;
            case pretre:
                Character pretre = new Character(nom, organisation);
                pretre.setComportementPersonnage(new LordSparthaBehaviour());
                pretre.setMoveBehaviour(new LordSparthaMovement());
                pretre.setFightBehaviour(new LordSparthaFightBehaviour());
                pretre.setPourcentagePv(70);
                pretre.setPourcentagePuissance(40);
                pretre.setPourcentageCapacite(60);
                pretre.setPourcentageVitesse(60);
                pretre.setPourcentageChance(55);
                pretre.setPourcentageDefense(20);
                pretre.setPourcentageResistance(30);
                return pretre;
            case pretre_sephiran:
                Character sephiran = new Character(nom, organisation);
                sephiran.setComportementPersonnage(new LordSparthaBehaviour());
                sephiran.setMoveBehaviour(new LordSparthaMovement());
                sephiran.setFightBehaviour(new LordSparthaFightBehaviour());
                sephiran.setPourcentagePv(70);
                sephiran.setPourcentagePuissance(40);
                sephiran.setPourcentageCapacite(60);
                sephiran.setPourcentageVitesse(60);
                sephiran.setPourcentageChance(55);
                sephiran.setPourcentageDefense(20);
                sephiran.setPourcentageResistance(30);
                return sephiran;
            case princess_crimea:
                Character elincia = new Character(nom, organisation);
                elincia.setComportementPersonnage(new LordSparthaBehaviour());
                elincia.setMoveBehaviour(new LordSparthaMovement());
                elincia.setFightBehaviour(new LordSparthaFightBehaviour());
                elincia.setPourcentagePv(70);
                elincia.setPourcentagePuissance(40);
                elincia.setPourcentageCapacite(60);
                elincia.setPourcentageVitesse(60);
                elincia.setPourcentageChance(55);
                elincia.setPourcentageDefense(20);
                elincia.setPourcentageResistance(30);
                return elincia;
            case ranger:
                Character ike = new Character(nom, organisation);
                ike.setComportementPersonnage(new RangerBehaviour());
                ike.setMoveBehaviour(new RangerMovement());
                ike.setFightBehaviour(new RangerFightBehaviour());
                ike.setPourcentagePv(75);
                ike.setPourcentagePuissance(50);
                ike.setPourcentageMagie(20);
                ike.setPourcentageCapacite(50);
                ike.setPourcentageVitesse(55);
                ike.setPourcentageChance(35);
                ike.setPourcentageDefense(40);
                ike.setPourcentageResistance(40);
                return ike;
            case sage:
                Character sage = new Character(nom, organisation);
                sage.setComportementPersonnage(new SageBehaviour());
                sage.setMoveBehaviour(new SageMovement());
                sage.setFightBehaviour(new SageFightBehaviour());
                sage.setPourcentagePv(70);
                sage.setPourcentagePuissance(40);
                sage.setPourcentageCapacite(60);
                sage.setPourcentageVitesse(60);
                sage.setPourcentageChance(55);
                sage.setPourcentageDefense(20);
                sage.setPourcentageResistance(30);
                return sage;
            case sage_guinevere:
                Character guinevere = new Character(nom, organisation);
                guinevere.setComportementPersonnage(new SageBehaviour());
                guinevere.setMoveBehaviour(new SageMovement());
                guinevere.setFightBehaviour(new SageFightBehaviour());
                guinevere.setPourcentagePv(70);
                guinevere.setPourcentagePuissance(40);
                guinevere.setPourcentageCapacite(60);
                guinevere.setPourcentageVitesse(60);
                guinevere.setPourcentageChance(55);
                guinevere.setPourcentageDefense(20);
                guinevere.setPourcentageResistance(30);
                return guinevere;
            case sage_limstella:
                Character limstella = new Character(nom, organisation);
                limstella.setComportementPersonnage(new SageBehaviour());
                limstella.setMoveBehaviour(new SageMovement());
                limstella.setFightBehaviour(new SageFightBehaviour());
                limstella.setPourcentagePv(70);
                limstella.setPourcentagePuissance(40);
                limstella.setPourcentageCapacite(60);
                limstella.setPourcentageVitesse(60);
                limstella.setPourcentageChance(55);
                limstella.setPourcentageDefense(20);
                limstella.setPourcentageResistance(30);
                return limstella;
            case sage_pent:
                Character pent = new Character(nom, organisation);
                pent.setComportementPersonnage(new SageBehaviour());
                pent.setMoveBehaviour(new SageMovement());
                pent.setFightBehaviour(new SageFightBehaviour());
                pent.setPourcentagePv(50);
                pent.setPourcentagePuissance(10);
                pent.setPourcentageMagie(30);
                pent.setPourcentageCapacite(20);
                pent.setPourcentageVitesse(40);
                pent.setPourcentageChance(40);
                pent.setPourcentageDefense(30);
                pent.setPourcentageResistance(35);
                pent.setNiv(6);
                pent.setPvGagne(13);
                pent.setPuissanceGagne(4);
                pent.setMagieGagne(13);
                pent.setCapaciteGagne(17);
                pent.setVitesseGagne(12);
                pent.setChanceGagne(14);
                pent.setDefGagne(6);
                pent.setResistanceGagne(10);
                pent.setConstitutionGagne(1);
                pent.soin();
                return pent;
            case shaman:
                Character shaman = new Character(nom, organisation);
                shaman.setComportementPersonnage(new LordSparthaBehaviour());
                shaman.setMoveBehaviour(new LordSparthaMovement());
                shaman.setFightBehaviour(new LordSparthaFightBehaviour());
                shaman.setPourcentagePv(70);
                shaman.setPourcentagePuissance(40);
                shaman.setPourcentageCapacite(60);
                shaman.setPourcentageVitesse(60);
                shaman.setPourcentageChance(55);
                shaman.setPourcentageDefense(20);
                shaman.setPourcentageResistance(30);
                return shaman;
            case shaman_bramimond:
                Character bramimond = new Character(nom, organisation);
                bramimond.setComportementPersonnage(new LordSparthaBehaviour());
                bramimond.setMoveBehaviour(new LordSparthaMovement());
                bramimond.setFightBehaviour(new LordSparthaFightBehaviour());
                bramimond.setPourcentagePv(70);
                bramimond.setPourcentagePuissance(40);
                bramimond.setPourcentageCapacite(60);
                bramimond.setPourcentageVitesse(60);
                bramimond.setPourcentageChance(55);
                bramimond.setPourcentageDefense(20);
                bramimond.setPourcentageResistance(30);
                return bramimond;
            case shaman_sophia:
                Character sophia = new Character(nom, organisation);
                sophia.setComportementPersonnage(new LordSparthaBehaviour());
                sophia.setMoveBehaviour(new LordSparthaMovement());
                sophia.setFightBehaviour(new LordSparthaFightBehaviour());
                sophia.setPourcentagePv(70);
                sophia.setPourcentagePuissance(40);
                sophia.setPourcentageCapacite(60);
                sophia.setPourcentageVitesse(60);
                sophia.setPourcentageChance(55);
                sophia.setPourcentageDefense(20);
                sophia.setPourcentageResistance(30);
                return sophia;
            case sniper:
                Character sniper = new Character(nom, organisation);
                sniper.setComportementPersonnage(new KnightBehaviour());
                sniper.setMoveBehaviour(new KnightMovement());
                sniper.setFightBehaviour(new KnightFightBehaviour());
                sniper.setPourcentagePv(70);
                sniper.setPourcentagePuissance(40);
                sniper.setPourcentageCapacite(60);
                sniper.setPourcentageVitesse(60);
                sniper.setPourcentageChance(55);
                sniper.setPourcentageDefense(20);
                sniper.setPourcentageResistance(30);
                return sniper;
            case sniper_igrene:
                Character igrene = new Character(nom, organisation);
                igrene.setComportementPersonnage(new KnightBehaviour());
                igrene.setMoveBehaviour(new KnightMovement());
                igrene.setFightBehaviour(new KnightFightBehaviour());
                igrene.setPourcentagePv(70);
                igrene.setPourcentagePuissance(40);
                igrene.setPourcentageCapacite(60);
                igrene.setPourcentageVitesse(60);
                igrene.setPourcentageChance(55);
                igrene.setPourcentageDefense(20);
                igrene.setPourcentageResistance(30);
                return igrene;
            case soldat:
                Character soldat = new Character(nom, organisation);
                soldat.setComportementPersonnage(new SoldierBehaviour());
                soldat.setMoveBehaviour(new SoldierMovement());
                soldat.setFightBehaviour(new SoldierFightBehaviour());
                soldat.setPourcentagePv(80);
                soldat.setPourcentagePuissance(45);
                soldat.setPourcentageMagie(15);
                soldat.setPourcentageCapacite(40);
                soldat.setPourcentageVitesse(30);
                soldat.setPourcentageChance(25);
                soldat.setPourcentageDefense(25);
                soldat.setPourcentageResistance(20);
                return soldat;
            case valkyrie:
                Character valkyrie = new Character(nom, organisation);
                valkyrie.setComportementPersonnage(new KnightBehaviour());
                valkyrie.setMoveBehaviour(new KnightMovement());
                valkyrie.setFightBehaviour(new KnightFightBehaviour());
                valkyrie.setPourcentagePv(70);
                valkyrie.setPourcentagePuissance(40);
                valkyrie.setPourcentageCapacite(60);
                valkyrie.setPourcentageVitesse(60);
                valkyrie.setPourcentageChance(55);
                valkyrie.setPourcentageDefense(20);
                valkyrie.setPourcentageResistance(30);
                return valkyrie;
            case valkyrie_mist:
                Character valkyrie_mist = new Character(nom, organisation);
                valkyrie_mist.setComportementPersonnage(new KnightBehaviour());
                valkyrie_mist.setMoveBehaviour(new KnightMovement());
                valkyrie_mist.setFightBehaviour(new KnightFightBehaviour());
                valkyrie_mist.setPourcentagePv(70);
                valkyrie_mist.setPourcentagePuissance(40);
                valkyrie_mist.setPourcentageCapacite(60);
                valkyrie_mist.setPourcentageVitesse(60);
                valkyrie_mist.setPourcentageChance(55);
                valkyrie_mist.setPourcentageDefense(20);
                valkyrie_mist.setPourcentageResistance(30);
                return valkyrie_mist;
            case voleur:
                Character voleur = new Character(nom, organisation);
                voleur.setComportementPersonnage(new KnightBehaviour());
                voleur.setMoveBehaviour(new KnightMovement());
                voleur.setFightBehaviour(new KnightFightBehaviour());
                voleur.setPourcentagePv(70);
                voleur.setPourcentagePuissance(40);
                voleur.setPourcentageCapacite(60);
                voleur.setPourcentageVitesse(60);
                voleur.setPourcentageChance(55);
                voleur.setPourcentageDefense(20);
                voleur.setPourcentageResistance(30);
                return voleur;
            default:
                Character perso = new Character(nom, organisation);
                return perso;
        }
    }

}
